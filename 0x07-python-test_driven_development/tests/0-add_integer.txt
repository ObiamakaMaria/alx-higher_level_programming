===========================
File: 0-add_integer.py
===========================

This module defines the integer addition of two  numbers ``add_integer(a, b=98)``.

Usage
=====

``add_integer(...)`` This function is used for integer addition of 2 numbers, it receives 2 argument.
The second argument has a default value of 98.

::

    >>> add_integer = __import__('0-add_integer').add_integer
    >>> add_integer(2, 3)
    5

::

    >>> add_integer(2, -3)
    -1

This function work with floating point numbers after their conversion to int

::

    >>> add_integer(2.3, 3.2)
    5

::

    >>> add_integer(2)
    100

Non-numbers
===========

``add_integer(...)`` only accept an int and a floatng point numbers else, it raises
a TypeError

::

    >>> add_integer("a", 3)
    Traceback (most recent call last):
    TypeError: a must be an integer

::

    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer

::

    >>> add_integer(3, "a")
    Traceback (most recent call last):
    TypeError: b must be an integer

::

    >>> add_integer(3, None)
    Traceback (most recent call last):
    TypeError: b must be an integer
::

    >>> add_integer(float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer

::

    >>> add_integer(2, float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer


